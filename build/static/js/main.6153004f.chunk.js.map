{"version":3,"sources":["index.js"],"names":["calculateWinner","squares","lines","i","length","_lines$i","Object","_Users_starlikerain_Documents_CODES_React_Official_Course_my_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_5__","a","b","c","Square","_this","_Users_starlikerain_Documents_CODES_React_Official_Course_my_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_starlikerain_Documents_CODES_React_Official_Course_my_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_starlikerain_Documents_CODES_React_Official_Course_my_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","component_index","setState","props","_this2","needClass","win_array","findIndex","element","btnClass","classnames","square","active","react__WEBPACK_IMPORTED_MODULE_6___default","createElement","className","onClick","value","React","Component","Board","_this3","renderSquare","Game","_this4","history","Array","fill","xIsNext","stepNumber","slice","concat","step","status","_this5","current","winner","move","map","description","key","href","jumpTo","handleClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6153004f.chunk.js","sourcesContent":["import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport classnames from \"classnames\"\nimport \"./index.css\"\n\n/**\n * 我是很普通的判断赢家\n * @param squares\n * @returns {*}\n */\nfunction calculateWinner( squares ) {\n    const lines = [\n        [ 0, 1, 2 ],\n        [ 3, 4, 5 ],\n        [ 6, 7, 8 ],\n        [ 0, 3, 6 ],\n        [ 1, 4, 7 ],\n        [ 2, 5, 8 ],\n        [ 0, 4, 8 ],\n        [ 2, 4, 6 ],\n    ]\n    for ( let i = 0; i < lines.length; i++ ) {\n        const [ a, b, c ] = lines[ i ]\n        if ( squares[ a ] && squares[ a ] === squares[ b ] && squares[ a ] === squares[ c ] ) {\n            // return squares[ a ]\n            // return [a,b,c]\n            return [ squares[ a ], [ a, b, c ] ]\n        }\n    }\n    return null\n}\n\n\n/**\n * my Square!!! 好惨啊 我透我都不是一个class了\n */\n\nclass Square extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            component_index: \"\",\n        }\n        // let component_index = this.props.component_index\n    }\n\n    componentWillMount() {\n        this.setState( {\n            component_index: this.props.component_index,\n        } )\n    }\n\n    render() {\n        let needClass = false\n        if ( this.props.win_array ) {\n            let win_array = this.props.win_array[ 0 ]\n\n            if ( win_array ) {\n                win_array.findIndex( ( element ) => {\n                    // 胜利数组里面有一个值 和本组件的 index相同\n                    if ( element === this.state.component_index ) {\n                        needClass = true\n                    }\n                } )\n            }\n        }\n\n        let btnClass = classnames( {\n            \"square\": true,\n            \"active\": needClass,\n        } )\n\n        return (\n            <button className={btnClass} onClick={this.props.onClick}>\n                {this.props.value}\n            </button>\n        )\n    }\n}\n\n\n/**\n * my drawing board!!!\n * middleware level\n */\nclass Board extends React.Component {\n    // constructor(){\n    //     super()\n    //\n    // }\n    //\n    renderSquare( i ) {\n        return <Square\n            value={this.props.squares[ i ]}\n            onClick={() => this.props.onClick( i )}\n            win_array={this.props.win_array}\n            component_index={i}\n        />\n    }\n\n\n    render() {\n        return (\n            <div>\n                <div className=\"board-row\">\n                    {this.renderSquare( 0 )}\n                    {this.renderSquare( 1 )}\n                    {this.renderSquare( 2 )}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare( 3 )}\n                    {this.renderSquare( 4 )}\n                    {this.renderSquare( 5 )}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare( 6 )}\n                    {this.renderSquare( 7 )}\n                    {this.renderSquare( 8 )}\n                </div>\n            </div>\n        )\n    }\n}\n\n\n/**\n * main export Project\n */\nclass Game extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            history: [ {\n                squares: Array( 9 ).fill( null )\n            } ],\n            xIsNext: true,\n            stepNumber: 0,\n            win_array: null,\n            // had_win_before: false\n        }\n    }\n\n    handleClick( i ) {\n        let history = this.state.history.slice( 0, this.state.stepNumber + 1 )\n        let current = history[ history.length - 1 ]\n        const squares = current.squares.slice()  // 为了浅拷贝\n\n        if ( calculateWinner( squares ) || squares[ i ] ) {\n            //  记录获胜的格子形态到state\n            // debugger\n            // if ( calculateWinner( squares ) ) {\n            //     debugger;\n            //     this.setState( {\n            //         win_Array: calculateWinner( squares )\n            //     } )\n            // }\n            // 获胜 || 格子被下过\n            return\n        }\n\n\n        squares[ i ] = this.state.xIsNext ? \"X\" : \"O\"\n        this.setState( {\n            history: history.concat( [ {\n                squares,\n            } ] ),\n            xIsNext: !this.state.xIsNext,\n            stepNumber: history.length\n        } )\n    }\n\n    jumpTo( step ) {\n        this.setState( {\n            xIsNext: !( step % 2 ),\n            stepNumber: step,\n            // win_array: null\n        } )\n    }\n\n    // componentDidUpdate() {\n    //     let history = this.state.history\n    //     let current = history[ this.state.stepNumber ]\n    //     let winner = calculateWinner( current.squares )\n    //     // debugger\n    //     // 第一次赢的时候渲染\n    //     if ( winner && !this.state.had_win_before ) {\n    //         // debugger\n    //         this.setState( {\n    //             win_array: winner.slice( 1, 4 ),\n    //             had_win_before: true,\n    //         } )\n    //     }\n    // }\n\n    render() {\n        let history = this.state.history\n        let current = history[ this.state.stepNumber ]\n        let winner = calculateWinner( current.squares )\n        let win_array = null;\n        // { step } 就是每一个数组对象\n        // { move } 就是第几个数组\n        let move = history.map( ( step, move ) => {\n            const description = move ?\n                `move # ${move}` :\n                \"Game start\"\n            return (\n                <li key={move}>\n                    <a href=\"#\" onClick={() => {this.jumpTo( move )}}>{description}</a>\n                </li>\n            )\n        } )\n\n        let status\n        if ( winner ) {\n            status = \"Winnder:\" + winner\n            // 这里已经胜利的状态\n            win_array =  winner.slice( 1, 4 )\n        } else {\n            status = `Next player: ${this.state.xIsNext ? \"X\" : \"O\"}`\n        }\n\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board squares={current.squares}\n                           onClick={( i ) => this.handleClick( i )}\n                           win_array={win_array}\n                    />\n                </div>\n                <div className=\"game-info\">\n                    <div>{status}</div>\n                    <ol>{move}</ol>\n                </div>\n            </div>\n        )\n    }\n}\n\n// ========================================\n\nReactDOM.render(\n    <Game/>,\n    document.getElementById( \"root\" )\n)\n"],"sourceRoot":""}